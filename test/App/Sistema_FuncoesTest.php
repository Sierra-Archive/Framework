<?php

namespace Framework\App;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-08-24 at 16:29:46.
 * @group Logic
 */
class Sistema_FuncoesTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Sistema_Funcoes
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Sistema_Funcoes;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Redirect
     * @todo   Implement testRedirect().
     */
    public function testRedirect() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Control_Arq_Ext
     * @todo   Implement testControl_Arq_Ext().
     */
    public function testControl_Arq_Ext() {
        $this->assertEquals('jpeg', Sistema_Funcoes::Control_Arq_Ext('jpe'));
        $this->assertEquals('mpeg', Sistema_Funcoes::Control_Arq_Ext('mpe'));
        $this->assertEquals('tiff', Sistema_Funcoes::Control_Arq_Ext('tif'));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Letra_Aleatoria
     * @todo   Implement testLetra_Aleatoria().
     */
    public function testLetra_Aleatoria() {
        // Remove the following lines when you implement this test.
        $variavel = Sistema_Funcoes::Letra_Aleatoria(rand());
        $this->assertFalse(is_numeric($variavel));
        $this->assertFalse(is_null($variavel));
        $this->assertFalse(is_array($variavel));
        $this->assertTrue(is_string($variavel));
        $this->assertEquals(1, strlen($variavel));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Letra_LinkDecode
     * @todo   Implement testLetra_LinkDecode().
     */
    public function testLetra_LinkDecode() {
        $this->assertEquals('À', Sistema_Funcoes::Letra_LinkDecode('%C3%80'));
        $this->assertEquals('Á', Sistema_Funcoes::Letra_LinkDecode('%C3%81'));
        $this->assertEquals('ó', Sistema_Funcoes::Letra_LinkDecode('%C3%B3'));
        $this->assertEquals('%C3%80', Sistema_Funcoes::Letra_LinkDecode('À',true));
        $this->assertEquals('%C3%81', Sistema_Funcoes::Letra_LinkDecode('Á',true));
        $this->assertEquals('%C3%B3', Sistema_Funcoes::Letra_LinkDecode('ó',true));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Erro
     * @todo   Implement testErro().
     */
    public function testErro() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::DirReplace
     * @todo   Implement testDirReplace().
     */
    public function testDirReplace() {
        $this->assertEquals('pasta/pasta/pasta', Sistema_Funcoes::DirReplace('pasta-pasta-pasta'));
        $this->assertEquals('pasta-pasta-pasta', Sistema_Funcoes::DirReplace('pasta/pasta/pasta'));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Url_Limpeza
     * @todo   Implement testUrl_Limpeza().
     */
    public function testUrl_Limpeza() {
        $this->assertEquals('php.net/manual/pt_BR/function.rand.php', Sistema_Funcoes::Url_Limpeza('http://php.net/manual/pt_BR/function.rand.php'));
        $this->assertEquals('ricardosierra.com.br', Sistema_Funcoes::Url_Limpeza('http://www.ricardosierra.com.br'));
    }


    /**
     * @covers Framework\App\Sistema_Funcoes::Url_Secure
     * @todo   Implement testUrl_Secure().
     */
    public function testUrl_Secure() {
        $this->assertEquals(true, Sistema_Funcoes::Url_Secure('https://php.net/manual/pt_BR/function.rand.php'));
        $this->assertEquals(false, Sistema_Funcoes::Url_Secure('http://www.ricardosierra.com.br'));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::VersionPHP
     * @todo   Implement testVersionPHP().
     */
    public function testVersionPHP() {
        // Teste 1
        $versao = '5.4.6';
        if (strnatcmp(phpversion(),$versao) >= 0) $resultado = TRUE;
        else                                      $resultado = FALSE;
        $this->assertEquals($resultado, Sistema_Funcoes::VersionPHP($versao));
        // TEste 2
        $versao = '6.4.6';
        if (strnatcmp(phpversion(),$versao) >= 0) $resultado = TRUE;
        else                                      $resultado = FALSE;
        $this->assertEquals($resultado, Sistema_Funcoes::VersionPHP($versao));
        
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Transf_Object_Array
     * @todo   Implement testTransf_Object_Array().
     */
    public function testTransf_Object_Array() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Perm_Modulos
     * @todo   Implement testPerm_Modulos().
     */
    public function testPerm_Modulos() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Form_Senha_Blindar
     * @todo   Implement testForm_Senha_Blindar().
     */
    public function testForm_Senha_Blindar() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Seguranca_Usuario_Validar
     * @todo   Implement testSeguranca_Usuario_Validar().
     */
    public function testSeguranca_Usuario_Validar() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Seguranca_Gerar_Hash
     * @todo   Implement testSeguranca_Gerar_Hash().
     */
    public function testSeguranca_Gerar_Hash() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Seguranca_Gerar_Token
     * @todo   Implement testSeguranca_Gerar_Token().
     */
    public function testSeguranca_Gerar_Token() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::HTML_min
     * @todo   Implement testHTML_min().
     */
    public function testHTML_min() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Control_Layoult_Valida_Cep
     * @todo   Implement testControl_Layoult_Valida_Cep().
     */
    public function testControl_Layoult_Valida_Cep() {
        $this->assertEquals(true, Sistema_Funcoes::Control_Layoult_Valida_Cep('22460-030'));
        $this->assertEquals(false, Sistema_Funcoes::Control_Layoult_Valida_Cep('22460030'));
        $this->assertEquals(false, Sistema_Funcoes::Control_Layoult_Valida_Cep('22460-03'));
        $this->assertEquals(false, Sistema_Funcoes::Control_Layoult_Valida_Cep('2246003'));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Control_Layoult_Valida_Email
     * @todo   Implement testControl_Layoult_Valida_Email().
     */
    public function testControl_Layoult_Valida_Email() {
        $this->assertEquals(true, Sistema_Funcoes::Control_Layoult_Valida_Email('contato@ricardosierra.com.br'));
        $this->assertEquals(false, Sistema_Funcoes::Control_Layoult_Valida_Email('22.460-03'));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Tranf_Byte_Otimizado
     * @todo   Implement testTranf_Byte_Otimizado().
     */
    public function testTranf_Byte_Otimizado() {
        $this->assertEquals('2 TB', Sistema_Funcoes::Tranf_Byte_Otimizado(2199023256000));
        $this->assertEquals('1 GB', Sistema_Funcoes::Tranf_Byte_Otimizado(1073741824));
        $this->assertEquals('1 MB', Sistema_Funcoes::Tranf_Byte_Otimizado(1048576));
        $this->assertEquals('1 KB', Sistema_Funcoes::Tranf_Byte_Otimizado(1024));
        $this->assertEquals('800 B', Sistema_Funcoes::Tranf_Byte_Otimizado(800));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Tranf_Otimizado_Byte
     * @todo   Implement testTranf_Otimizado_Byte().
     */
    public function testTranf_Otimizado_Byte() {
        $this->assertEquals(2199023255552, Sistema_Funcoes::Tranf_Otimizado_Byte('2 TB'));
        $this->assertEquals(1073741824, Sistema_Funcoes::Tranf_Otimizado_Byte('1 GB'));
        $this->assertEquals(1048576, Sistema_Funcoes::Tranf_Otimizado_Byte('1 MB'));
        $this->assertEquals(1024, Sistema_Funcoes::Tranf_Otimizado_Byte('1 KB'));
        $this->assertEquals(800, Sistema_Funcoes::Tranf_Otimizado_Byte('800 B'));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Tranf_Segundo_Tempo
     * @todo   Implement testTranf_Segundo_Tempo().
     */
    public function testTranf_Segundo_Tempo() {
        $this->assertEquals('1 hora', Sistema_Funcoes::Tranf_Segundo_Tempo(3600));
        $this->assertEquals('59 minutos', Sistema_Funcoes::Tranf_Segundo_Tempo(3540));
    }
    
    /**
     * @covers Framework\App\Sistema_Funcoes::Tranf_Tempo_Segundo
     * @todo   Implement testTranf_Tempo_Segundo().
     */
    public function testTranf_Tempo_Segundo() {
        $this->assertEquals(3600, Sistema_Funcoes::Tranf_Tempo_Segundo('1 hora'));
        $this->assertEquals(3540, Sistema_Funcoes::Tranf_Tempo_Segundo('59 minutos'));
    }
    
    /**
     * @covers Framework\App\Sistema_Funcoes::Tranf_Url_Https
     * @todo   Implement testTranf_Url_Https().
     */
    public function testTranf_Url_Https() {
        $this->assertEquals('https://php.net/manual/pt_BR/function.rand.php', Sistema_Funcoes::Tranf_Url_Https('http://php.net/manual/pt_BR/function.rand.php'));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Tranf_Distancia_Otimizado
     * @todo   Implement testTranf_Distancia_Otimizado().
     */
    public function testTranf_Distancia_Otimizado() {
        $this->assertEquals('10 m', Sistema_Funcoes::Tranf_Distancia_Otimizado(10));
        $this->assertEquals('1 km', Sistema_Funcoes::Tranf_Distancia_Otimizado(1000));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Tranf_Otimizado_Distancia
     * @todo   Implement testTranf_Otimizado_Distancia().
     */
    public function testTranf_Otimizado_Distancia() {
        $this->assertEquals(10, Sistema_Funcoes::Tranf_Otimizado_Distancia('10 m'));
        $this->assertEquals(1000, Sistema_Funcoes::Tranf_Otimizado_Distancia('1 km'));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Tranf_Real_Float
     * @todo   Implement testTranf_Real_Float().
     */
    public function testTranf_Real_Float() {
        $this->assertEquals(10.4, Sistema_Funcoes::Tranf_Real_Float('R$ 10,40'));
        $this->assertEquals(0.4, Sistema_Funcoes::Tranf_Real_Float('R$ 0,40'));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Tranf_Float_Real
     * @todo   Implement testTranf_Float_Real().
     */
    public function testTranf_Float_Real() {
        $this->assertEquals('R$10,40', Sistema_Funcoes::Tranf_Float_Real(10.4));
        $this->assertEquals('R$0,40', Sistema_Funcoes::Tranf_Float_Real(0.4));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Tranf_Porc_Float
     * @todo   Implement testTranf_Porc_Float().
     */
    public function testTranf_Porc_Float() {
        $this->assertEquals(0.6, Sistema_Funcoes::Tranf_Porc_Float('60%'));
        $this->assertEquals(0.05, Sistema_Funcoes::Tranf_Porc_Float('5%'));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Tranf_Float_Porc
     * @todo   Implement testTranf_Float_Porc().
     */
    public function testTranf_Float_Porc() {
        $this->assertEquals('60,00%', Sistema_Funcoes::Tranf_Float_Porc(0.6));
        $this->assertEquals('05,00%', Sistema_Funcoes::Tranf_Float_Porc(0.05));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Modelo_Data_Soma
     * @todo   Implement testModelo_Data_Soma().
     */
    public function testModelo_Data_Soma() {
        $this->assertEquals('29/01/2016', Sistema_Funcoes::Modelo_Data_Soma('28/08/2015',0,5,1));
        $this->assertEquals('29/09/2015 12:40:20', Sistema_Funcoes::Modelo_Data_Soma('28/08/2015 10:10:00',0,1,1,2,30,20));
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Get_Info_Data
     * @todo   Implement testGet_Info_Data().
     */
    public function testGet_Info_Data() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Gerar_Senha
     * @todo   Implement testGerar_Senha().
     */
    public function testGerar_Senha() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Detectar_Navegador
     * @todo   Implement testDetectar_Navegador().
     */
    public function testDetectar_Navegador() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Get_Gps
     * @todo   Implement testGet_Gps().
     */
    public function testGet_Gps() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Framework\App\Sistema_Funcoes::Trans_Gps_Number
     * @todo   Implement testTrans_Gps_Number().
     */
    public function testTrans_Gps_Number() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}
