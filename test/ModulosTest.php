<?php

namespace Framework\App;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-08-24 at 16:29:47.
 */
class ModulosTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Dao
     */
    protected $objects;
    protected $modulos = Array();

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        
            // Carrega Todos os DAO
            $diretorio = dir(MOD_PATH);
            // Percorre Diretório
            while($arquivo = $diretorio -> read()){
                if($arquivo=='.' || $arquivo=='..'){
                    continue;
                }
                $this->assertTrue(is_dir(MOD_PATH.$arquivo),'Modulos Obrigatóriamente tem que ser Pastas: '.$arquivo);
                $this->modulos[] = $arquivo;
            }
            $diretorio -> close();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * 
     */
    public function testArquivos() {
        $siglas = Array();
        foreach($this->modulos as &$valor){
            $diretorio = dir(MOD_PATH.$valor.DS);
            $config = false;
            $principal = false;
            $controle = false;
            $modelo = false;
            $visual = false;
            // Percorre Diretório
            while($arquivo = $diretorio -> read()){
                if($arquivo=='.' || $arquivo=='..'){
                    continue;
                }
                if($arquivo === $valor.'_Controle.php'){
                    $controle = true;
                }else if($arquivo === $valor.'_Modelo.php'){
                    $modelo = true;
                }else if($arquivo === $valor.'_Visual.php'){
                    $visual = true;
                }else if($arquivo === '_Config.php'){
                    $config = true;
                }else if($arquivo === '_Principal.Class.php'){
                    $principal = true;
                }else {
                    $this->assertEquals(strpos($arquivo, $valor.'_'),0,'Modulo '.$valor.' possui um submodulo inválido: '.$arquivo);
                }
            }
            $this->assertTrue($controle,'Modulo '.$valor.' não possui class de Controle');
            $this->assertTrue($modelo,'Modulo '.$valor.' não possui class de Modelo');
            $this->assertTrue($visual,'Modulo '.$valor.' não possui class Visual');
            $this->assertTrue($config,'Modulo '.$valor.' não possui arquivo de Config');
            if($valor!=='_Sistema') $this->assertTrue($principal,'Modulo '.$valor.' não possui class Principal');
            $diretorio -> close();
        }
    }

}
